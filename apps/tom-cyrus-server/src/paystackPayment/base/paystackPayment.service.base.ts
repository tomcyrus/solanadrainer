/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PaystackPayment as PrismaPaystackPayment,
} from "@prisma/client";

export class PaystackPaymentServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PaystackPaymentCountArgs, "select">
  ): Promise<number> {
    return this.prisma.paystackPayment.count(args);
  }

  async paystackPayments(
    args: Prisma.PaystackPaymentFindManyArgs
  ): Promise<PrismaPaystackPayment[]> {
    return this.prisma.paystackPayment.findMany(args);
  }
  async paystackPayment(
    args: Prisma.PaystackPaymentFindUniqueArgs
  ): Promise<PrismaPaystackPayment | null> {
    return this.prisma.paystackPayment.findUnique(args);
  }
  async createPaystackPayment(
    args: Prisma.PaystackPaymentCreateArgs
  ): Promise<PrismaPaystackPayment> {
    return this.prisma.paystackPayment.create(args);
  }
  async updatePaystackPayment(
    args: Prisma.PaystackPaymentUpdateArgs
  ): Promise<PrismaPaystackPayment> {
    return this.prisma.paystackPayment.update(args);
  }
  async deletePaystackPayment(
    args: Prisma.PaystackPaymentDeleteArgs
  ): Promise<PrismaPaystackPayment> {
    return this.prisma.paystackPayment.delete(args);
  }
}
